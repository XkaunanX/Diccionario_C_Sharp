.File.Delete(String) Method
.Lenguaje: C#
.Namespace System.IO
.Elimina el archivo especificado.

public static void Delete (string path);

Parámetros
sendero
Cuerda
El nombre del archivo que se va a eliminar. No se admiten los caracteres comodín.

Observaciones
Especifique un nombre de archivo con cualquier información de ruta relativa o absoluta para el pathparámetro. No se pueden incluir caracteres comodín. La información de ruta relativa se interpreta como relativa al directorio de trabajo actual. Para obtener el directorio de trabajo actual, consulte GetCurrentDirectory .

Si el archivo a eliminar no existe, no se lanza ninguna excepción.

Se aplica a

Producto	Versiones

.RED		Núcleo 1.0, Núcleo 1.1, Núcleo 2.0, Núcleo 2.1, Núcleo 2.2, Núcleo 3.0, Núcleo 3.1, 5, 6, 7 Vista previa 5

.NET Framework	1.1, 2.0, 3.0, 3.5, 4.0, 4.5, 4.5.1, 4.5.2, 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1, 4.7.2, 4.8

Estándar .NET	1.3, 1.4, 1.6, 2.0, 2.1

UWP	10.0

Xamarin.iOS	10.8

Xamarin.Mac	3.0



Ejemplos
El siguiente ejemplo copia grupos de archivos a la carpeta de copia de seguridad C:\archives\2008 y luego los elimina de la carpeta de origen.

string sourceDir = @"c:\current";
string backupDir = @"c:\archives\2008";

try
{
    string[] picList = Directory.GetFiles(sourceDir, "*.jpg");
    string[] txtList = Directory.GetFiles(sourceDir, "*.txt");

    // Copy picture files.
    foreach (string f in picList)
    {
        // Remove path from the file name.
        string fName = f.Substring(sourceDir.Length + 1);

        // Use the Path.Combine method to safely append the file name to the path.
        // Will overwrite if the destination file already exists.
        File.Copy(Path.Combine(sourceDir, fName), Path.Combine(backupDir, fName), true);
    }

    // Copy text files.
    foreach (string f in txtList)
    {

        // Remove path from the file name.
        string fName = f.Substring(sourceDir.Length + 1);

        try
        {
            // Will not overwrite if the destination file already exists.
            File.Copy(Path.Combine(sourceDir, fName), Path.Combine(backupDir, fName));
        }

        // Catch exception if the file was already copied.
        catch (IOException copyError)
        {
            Console.WriteLine(copyError.Message);
        }
    }

    // Delete source files that were copied.
    foreach (string f in txtList)
    {
        File.Delete(f);
    }
    foreach (string f in picList)
    {
        File.Delete(f);
    }
}

catch (DirectoryNotFoundException dirNotFound)
{
    Console.WriteLine(dirNotFound.Message);
}

